package doordash

const (
	GeneratePasscodeQuery = "mutation generatePasscodeBFF($action: String!, $channel: String!, $experience: String, $language: String, $mfaDetail: MfaDetail, $overrideId: String, $overrideType: String, $shouldForceNewCode: Boolean, $userDetail: UserDetail) {\n  generatePasscode(action: $action, channel: $channel, experience: $experience, language: $language, mfaDetail: $mfaDetail, overrideId: $overrideId, overrideType: $overrideType, shouldForceNewCode: $shouldForceNewCode, userDetail: $userDetail) {\n    action\n    availableChannels\n    channel\n    contactAddress\n    tokenExpiresAt\n    userId\n    __typename\n  }\n}\n"
	PostLoginQuery        = "query postLoginQuery($action: String!, $code: String!) {\n  postLogin(action: $action, code: $code) {\n    status\n    isLoggedInPriorToTokenExchange\n    nextUrl\n    __typename\n  }\n}\n"
	VerifyPasscodeQuery   = "mutation verifyPasscodeBFF($code: String!, $action: String!, $mfaDetail: MfaDetail, $overrideId: String, $overrideType: String) {\n  verifyPasscode(code: $code, action: $action, mfaDetail: $mfaDetail, overrideId: $overrideId, overrideType: $overrideType) {\n    id\n    __typename\n  }\n}\n"
	CreateReferralQuery   = "mutation createReferral($referralLinkId: ID!, $mfaAction: String) {\n  createReferral(referralLinkId: $referralLinkId, mfaAction: $mfaAction) {\n    referral {\n      id\n      referralLinkId\n      receiverUserId\n      senderUserId\n      referralStatus\n      createdAt\n      orderId\n      experienceSource\n      experienceDestination\n      formattedName\n      email\n      referralStatusGrouping\n      senderRewardAmount {\n        currency\n        displayString\n        decimalPlaces\n        unitAmount\n        sign\n        __typename\n      }\n      __typename\n    }\n    errorMessage\n    __typename\n  }\n}\n"
	SetAddressQuery       = "mutation addConsumerAddress($lat: Float!, $lng: Float!, $city: String!, $state: String!, $zipCode: String!, $printableAddress: String!, $shortname: String!, $googlePlaceId: String!, $subpremise: String, $driverInstructions: String, $dropoffOptionId: String, $manualLat: Float, $manualLng: Float, $addressLinkType: AddressLinkType) {\n  addConsumerAddress(lat: $lat, lng: $lng, city: $city, state: $state, zipCode: $zipCode, printableAddress: $printableAddress, shortname: $shortname, googlePlaceId: $googlePlaceId, subpremise: $subpremise, driverInstructions: $driverInstructions, dropoffOptionId: $dropoffOptionId, manualLat: $manualLat, manualLng: $manualLng, addressLinkType: $addressLinkType) {\n    ...ConsumerFragment\n    __typename\n  }\n}\n\nfragment ConsumerFragment on Consumer {\n  id\n  timezone\n  firstName\n  lastName\n  localizedNames {\n    informalName\n    formalName\n    formalNameAbbreviated\n    __typename\n  }\n  email\n  phoneNumber\n  receiveTextNotifications\n  defaultCountry\n  isGuest\n  scheduledDeliveryTime\n  accountCredits\n  hasCompletedFirstOrder\n  dropoffOptions {\n    id\n    displayString\n    isDefault\n    isEnabled\n    placeholderText\n    disabledMessage\n    __typename\n  }\n  phoneNumberComponents {\n    formattedNationalNumber\n    nationalNumber\n    formattedInternationalNumber\n    countryCode\n    internationalNumber\n    countryShortname\n    __typename\n  }\n  availableAddresses {\n    id\n    street\n    city\n    subpremise\n    state\n    zipCode\n    lat\n    lng\n    manualLat\n    manualLng\n    shortname\n    printableAddress\n    driverInstructions\n    dropoffPreferences {\n      allPreferences {\n        optionId\n        isDefault\n        instructions\n        __typename\n      }\n      __typename\n    }\n    countryCode\n    country\n    timezone\n    addressLinkType\n    __typename\n  }\n  defaultAddress {\n    ...DefaultAddressFragment\n    __typename\n  }\n  districtAvailability {\n    isDistrictActive\n    __typename\n  }\n  orderCart {\n    ...ConsumerOrderCartFragment\n    __typename\n  }\n  activeSubscription {\n    ...SubscriptionFragment\n    __typename\n  }\n  allSubscriptionPlans {\n    ...ConsumerSubscriptionPlanFragment\n    __typename\n  }\n  __typename\n}\n\nfragment DefaultAddressFragment on DefaultAddress {\n  id\n  street\n  city\n  subpremise\n  state\n  zipCode\n  country\n  countryCode\n  lat\n  lng\n  manualLat\n  manualLng\n  timezone\n  shortname\n  printableAddress\n  driverInstructions\n  dropoffPreferences {\n    allPreferences {\n      optionId\n      isDefault\n      instructions\n      __typename\n    }\n    __typename\n  }\n  addressLinkType\n  __typename\n}\n\nfragment ConsumerOrderCartFragment on OrderCart {\n  id\n  hasError\n  isConsumerPickup\n  isConvenienceCart\n  isMerchantShipping\n  offersDelivery\n  offersPickup\n  subtotal\n  urlCode\n  groupCart\n  groupCartPollInterval\n  isCatering\n  cateringInfo {\n    cateringVersion\n    minOrderSize\n    maxOrderSize\n    orderInAdvanceInSeconds\n    cancelOrderInAdvanceInSeconds\n    __typename\n  }\n  shortenedUrl\n  maxIndividualCost\n  serviceRateMessage\n  isOutsideDeliveryRegion\n  currencyCode\n  menu {\n    id\n    hoursToOrderInAdvance\n    name\n    minOrderSize\n    isCatering\n    __typename\n  }\n  creator {\n    id\n    firstName\n    lastName\n    localizedNames {\n      informalName\n      formalName\n      formalNameAbbreviated\n      __typename\n    }\n    __typename\n  }\n  deliveries {\n    id\n    quotedDeliveryTime\n    __typename\n  }\n  submittedAt\n  restaurant {\n    id\n    maxOrderSize\n    coverImgUrl\n    slug\n    address {\n      printableAddress\n      street\n      lat\n      lng\n      __typename\n    }\n    business {\n      id\n      name\n      __typename\n    }\n    __typename\n  }\n  storeDisclaimers {\n    id\n    disclaimerDetailsLink\n    disclaimerLinkSubstring\n    disclaimerText\n    displayTreatment\n    __typename\n  }\n  orders {\n    ...ConsumerOrdersFragment\n    __typename\n  }\n  teamAccount {\n    id\n    name\n    __typename\n  }\n  ...ConsumerOrderCartDomainFragment\n  __typename\n}\n\nfragment ConsumerOrdersFragment on Order {\n  id\n  consumer {\n    firstName\n    lastName\n    id\n    localizedNames {\n      informalName\n      formalName\n      formalNameAbbreviated\n      __typename\n    }\n    __typename\n  }\n  isSubCartFinalized\n  orderItems {\n    id\n    options {\n      id\n      name\n      quantity\n      nestedOptions\n      __typename\n    }\n    nestedOptions\n    specialInstructions\n    substitutionPreference\n    quantity\n    singlePrice\n    priceOfTotalQuantity\n    continuousQuantity\n    unit\n    purchaseType\n    estimatedPricingDescription\n    item {\n      id\n      imageUrl\n      name\n      price\n      minAgeRequirement\n      category {\n        title\n        __typename\n      }\n      extras {\n        id\n        title\n        description\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  paymentCard {\n    id\n    stripeId\n    __typename\n  }\n  paymentLineItems {\n    subtotal\n    taxAmount\n    subtotalTaxAmount\n    feesTaxAmount\n    serviceFee\n    __typename\n  }\n  __typename\n}\n\nfragment ConsumerOrderCartDomainFragment on OrderCart {\n  domain {\n    giftInfo {\n      recipientName\n      recipientGivenName\n      recipientFamilyName\n      recipientPhone\n      recipientEmail\n      cardMessage\n      cardId\n      shouldNotifyTrackingToRecipientOnDasherAssign\n      shouldNotifyRecipientForDasherQuestions\n      senderName\n      shouldRecipientScheduleGift\n      hasGiftIntent\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment SubscriptionFragment on Subscription {\n  subscriptionStatus\n  id\n  subscriptionPlan {\n    isPartnerPlan\n    allowAllStores\n    id\n    numEligibleStores\n    __typename\n  }\n  __typename\n}\n\nfragment ConsumerSubscriptionPlanFragment on ConsumerSubscriptionPlan {\n  allowAllStores\n  id\n  numEligibleStores\n  isCorporatePlan\n  __typename\n}\n"
	GetReferralLinkQuery  = "query getReferralLinkForSender {\n  getReferralLinkForSender {\n    referralLink {\n      id\n      senderUserId\n      submarketId\n      url\n      createdAt\n      expireAt\n      experienceSource\n      experienceDestination\n      senderRewardAmount {\n        currency\n        displayString\n        decimalPlaces\n        unitAmount\n        sign\n        __typename\n      }\n      receiverRequiredMinSubtotal {\n        currency\n        displayString\n        decimalPlaces\n        unitAmount\n        sign\n        __typename\n      }\n      receiverRewardDisplayType\n      receiverFlatAmountOffTotalReward {\n        currency\n        displayString\n        decimalPlaces\n        unitAmount\n        sign\n        __typename\n      }\n      receiverFlatAmountOffPerDelivery {\n        currency\n        displayString\n        decimalPlaces\n        unitAmount\n        sign\n        __typename\n      }\n      receiverPercentOffPerDelivery\n      receiverPercentOffMaxDiscountPerDelivery {\n        currency\n        displayString\n        decimalPlaces\n        unitAmount\n        sign\n        __typename\n      }\n      receiverMaxDeliveries\n      __typename\n    }\n    errorMessage\n    __typename\n  }\n}\n"
)

type GraphQLResponse[T any] struct {
	Data T
}

type GQLPayload struct {
	OperationName string      `json:"operationName"`
	Variables     interface{} `json:"variables"`
	Query         string      `json:"query"`
}
